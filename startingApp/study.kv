<RootWidget@FloatLayout>:
    canvas.before:
        Rectangle:
            source: "assets/StandardBackground.png"
            pos: self.pos
            size: self.size  
            
    MDScreenManager:
        id: screen_manager_root
        ToDoScreen:
            name: "todo"
        FlashCardsScreen:
            name: "flashCards"
        TimerScreen:
            name: "timer"
        SettingsScreen:
            name: "settings"
        
    # Bottom Navigation Bar
    MDBoxLayout:
        id: bottom_nav
        size_hint_y: None
        height: dp(60)
        pos_hint: {"x": 0, "y": 0}
        spacing: dp(5)
        padding: dp(10)
        md_bg_color: 0.95, 0.95, 0.95, 1

        MDRaisedButton:
            text: "To-Do"
            on_release: app.root.ids.screen_manager_root.current = "todo"

        MDRaisedButton:
            text: "Flash Cards"
            on_release: app.root.ids.screen_manager_root.current = "flashCards"

        MDRaisedButton:
            text: "Timer"
            on_release: app.root.ids.screen_manager_root.current = "timer"

        MDRaisedButton:
            text: "Settings"
            on_release: app.root.ids.screen_manager_root.current = "settings"

<ToDoScreen@Screen>:
    MDBoxLayout:
        orientation: 'vertical'
        spacing: dp(10)
        padding: dp(10), dp(10), dp(10), dp(70) #left, top, right, bottom
    
        MDTopAppBar:
            title: "ToDo List"
            elevation: 15
        
        ScrollView:    
            MDList:
                id: todo_items_container
                size_hint_y: None
                height: self.minimum_height
        
        # Expandable input box
        MDBoxLayout:
            id: input_box
            orientation: 'vertical'
            size_hint_y: None
            height: dp(60)
            spacing: dp(5)
            padding: dp(5)
            
            # Additional fields (hidden initially, opacity=0)
            MDTextField:
                id: task_header_input
                hint_text: "Task Header"
                size_hint_y: None
                height: dp(40)
                opacity: 0
            
            MDTextField:
                id: task_description_input
                hint_text: "Task Description"
                size_hint_y: None
                height: dp(40)
                opacity: 0
            
            MDTextField:
                id: task_date_input
                hint_text: "Task Due Date (MM/DD/YYYY)"
                size_hint_y: None
                height: dp(40)
                opacity: 0
            
            # Initial single-line input (at bottom, always visible initially)
            MDTextField:
                id: new_task_input
                hint_text: "Add a new task..."
                size_hint_y: None
                height: dp(40)
                on_focus: if self.focus: root.expand_input()
        
        MDRaisedButton:
            text: "Add Task"
            size_hint_y: None
            height: dp(40)
            on_release: root.addTask()
        
                    
<FlashCardsScreen@Screen>:
    BoxLayout:
        orientation: 'vertical'
        padding: 10, 10, 10, 90
        spacing: 8

        # list area (starts empty; Python will populate it in on_pre_enter)
        RecycleView:
            id: rv
            viewclass: 'FlashCardRow'
            data: []   
            RecycleBoxLayout:
                default_size: None, dp(56)
                default_size_hint: 1, None
                size_hint_y: None
                height: self.minimum_height
                orientation: 'vertical'

        BoxLayout:
            size_hint_y: None
            height: dp(48)
            Button:
                text: 'Add card'
                on_release: root.open_add_popup()

        
# Generate a row per flash card in the file.
<FlashCardRow@BoxLayout>:
    front: ''
    back: ''
    padding: 8
    Label:
        text: root.front
    Button:
        text: 'Flip'
        size_hint_x: None
        width: dp(72)
        # Call the screen method (root is the FlashCardRow widget; root.parent... might not be the screen)
        on_release: app.root.ids.screen_manager.get_screen('flashCards').show_back_popup(root.front, root.back)

<TimerScreen@MDScreen>:
    MDBoxLayout:
        orientation: 'vertical'
        MDLabel: 
            text: "This is the Timer Screen"
            halign: "center"
        
                
<SettingsScreen@MDScreen>:
    MDBoxLayout:
        orientation: 'vertical'
        MDLabel: 
            text: "This is the Settings Screen"
            halign: "center"

       
    
